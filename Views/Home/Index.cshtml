@{
  ViewBag.Title = "Home Page";
}

<h1 class="display-1 text-muted fw-bold text-center">Jusqu'a</h1>
<h2 class="display-6 text-muted fw-bold text-center">A community driven grocery database!</h2>
<p class="text-muted text-center mt-5">Enter an item name below to get started!</p>

<div class="row mt-2 mb-5">
  <!--
  <section class="row" aria-labelledby="aspnetTitle">
    <h1 id="title">ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="https://asp.net" class="btn btn-primary btn-md">Learn more &raquo;</a></p>
  </section>

  <div class="row">
    <section class="col-md-4" aria-labelledby="gettingStartedTitle">
      <h2 id="gettingStartedTitle">Getting started</h2>
      <p>
        ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
        enables a clean separation of concerns and gives you full control over markup
        for enjoyable, agile development.
      </p>
      <p><a class="btn btn-outline-dark" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </section>
    <section class="col-md-4" aria-labelledby="librariesTitle">
      <h2 id="librariesTitle">Get more libraries</h2>
      <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
      <p><a class="btn btn-outline-dark" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </section>
    <section class="col-md-4" aria-labelledby="hostingTitle">
      <h2 id="hostingTitle">Web Hosting</h2>
      <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
      <p><a class="btn btn-outline-dark" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </section>
  </div>
  -->

  <div class="col m-auto">
    <form id="main-searchbox-form"
          action="/Item/Search" 
          method="get">

    </form>


    <div class="input-group">
      <input id="item-searchbox"
             form="main-searchbox-form"
             name="query"
             type="search"
             class="form-control form-control-lg w-auto flex-fill" />
      <label for="item-searchbox"
             class="form-label visually-hidden">Search items</label>
      <input type="submit"
             form="main-searchbox-form"
             class="btn btn-primary flex-fill"
             value="Search Items" />
    </div>
  </div>
</div>



<script>

  document.onreadystatechange = _ => {
    if (document.readyState === "complete") {

      //Access the session storage to display any toast notifications that are pending.
      const recently_added_stored_value = sessionStorage.getItem("recently-added");
      if (recently_added_stored_value !== null) {

        //There's something that was recently added and we've been redirected back
        //to the main page.

        const recently_added = JSON.parse(recently_added_stored_value);


        const toast_box = document.querySelector("#toast-box");
        const live_toast = document.createElement("div");
        live_toast.classList.add("toast");
        live_toast.setAttribute("role", "alert");
        live_toast.setAttribute("aria-live", "assertive");
        live_toast.setAttribute("aria-atomic", "true");


        const toast_body = document.createElement("div");
        toast_body.classList.add("toast-body");
        toast_body.textContent = `${recently_added.data.itemQuantity}x ${recently_added.data.item.brand} ${recently_added.data.item.name} ${recently_added.data.item.variant}`;


        const toast_header = document.createElement("div");
        toast_header.classList.add("toast-header");


        const toast_header_title = document.createElement("strong");
        toast_header_title.classList.add("me-auto");
        toast_header_title.textContent = `Added Item to ${recently_added.addedTo} list`;


        const toast_header_timestamp = document.createElement("small");
        toast_header_timestamp.textContent = `${toTimeString(Date.now() - recently_added.timestamp)} ago`;


        const toast_dismiss_button = document.createElement("button");
        toast_dismiss_button.setAttribute("type", "button");
        toast_dismiss_button.setAttribute("data-bs-dismiss", "toast");
        toast_dismiss_button.setAttribute("aria-label", "Close");
        toast_dismiss_button.classList.add("btn-close");

        //Render toast.
        toast_header.append(
          toast_header_title,
          toast_header_timestamp,
          toast_dismiss_button,
        );
        live_toast.append(toast_header, toast_body);
        toast_box.replaceChildren(live_toast);
        new bootstrap.Toast(live_toast).show();

        //Clear the recently added session storage key after showing the toast.
        sessionStorage.removeItem("recently-added");
      }

    }
  };


  function toTimeString(unix_timestamp) {

    if (unix_timestamp < 60000) {

      //It's been less than 60 seconds
      return `${Math.floor(unix_timestamp / 1000)} second(s)`;
    }
    else if (unix_timestamp < 3600000) {

      //It's been less than 60 minutes
      return `${Math.floor((unix_timestamp / 1000) / 60)} minute(s)`;
    }
    else {

      //It's been more than 60 minutes, we start counting hours from this point.
      return `${Math.floor(((unix_timestamp / 1000) / 60) / 60)} hour(s)`;
    }
  }
</script>